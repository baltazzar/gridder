/**
 * Baltazzar Gridder %>
 * Versão: 0.2.0
 * Módulo para exibição de registros de maneira tabular.
 * Autor: BaltazZar Team
 */
!function(a){if("object"==typeof exports)module.exports=a();else if("function"==typeof define&&define.amd)define(a);else{var b;"undefined"!=typeof window?b=window:"undefined"!=typeof global?b=global:"undefined"!=typeof self&&(b=self),(b.baltazzar||(b.baltazzar={})).gridder=a()}}(function(){var define,module,exports;return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);throw new Error("Cannot find module '"+g+"'")}var j=c[g]={exports:{}};b[g][0].call(j.exports,function(a){var c=b[g][1][a];return e(c?c:a)},j,j.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(_dereq_,module,exports){var $=_dereq_("jquery"),_=_dereq_("underscore"),Backbone=_dereq_("backbone");Backbone.$=$;var tableTemplate=["<div>",'	<table class="table table-bordered">',"		<thead></thead>","		<tbody></tbody>","	</table>","</div>"].join("");module.exports=Backbone.View.extend({template:tableTemplate,colsOptions:null,changeValuesOptions:null,getColsCallback:null,getRowsCallback:null,initialize:function(a){this.options=a,this.render(),this.listenTo(this.options.collection,"all",_.debounce(function(){this.render(),this.getColsCallback&&this.getCols(this.getColsCallback),this.getRowsCallback&&this.getRows(this.getRowsCallback),this.addColsOptions&&this.addCols(this.addColsOptions),this.changeValuesOptions&&this.changeValues(this.changeValuesOptions)}),300)},render:function(){this.$el.html(this.template),this.setHeaders(),this.setCols(),this.options.cssClasses&&this.setCssClasses()},changeValues:function(a){var b=this.$("table > tbody > tr > td");_.each(a,function(a,c){_.each(b,function(b){$(b).html()==c&&$(b).html(a)})}),this.changeValuesOptions=a},addCols:function(a){var b=this,c=null;_.each(a,function(a){setTimeout(function(){var d=a.position,e=a.header?a.header:"";d=d&&"first"===d?0:d&&"last"===d?b.$("table > thead > tr > th").length:d>b.$("table > thead > tr > th").length?b.$("table > thead > tr > th").length:d;try{0===d?b.$("table > thead > tr > th:first-child").before("<th>"+e+"</th>"):b.$("table > thead > tr > th:nth-child("+d+")").after("<th>"+e+"</th>")}catch(f){d=b.$("table > thead > tr > th").length,b.$("table > thead > tr > th:nth-child("+d+")").after("<th>"+e+"</th>")}_.each(b.$("table > tbody > tr"),function(e){var f=b.options.collection.get(e.id);c=a.content.replace(/\{\{(\w*)\}\}/gi,function(a,b){return f.get(b)}),0===d?$(e).find("td:first-child").before('<td style="width:1px;">'+c+"</td>"):$(e).find("td:nth-child("+d+")").after('<td style="width:1px;">'+c+"</td>")})},a.position)}),this.addColsOptions=a},getCols:function(a){var b=this;_.each(this.$("table > tbody > tr > td"),function(c){a(c,b.options.collection.get($(c).parents("tr").attr("id")))}),this.getColsCallback=a},getRows:function(a){var b=this;_.each(this.$("table > tbody > tr"),function(c){a(c,b.options.collection.get(c.id))}),this.getRowsCallback=a},setHeaders:function(){var a=_.map(this.options.headers,function(a){return"<th>"+a.split(":")[1]+"</th>"}).join("");this.$("table > thead").append("<tr/>").find("tr").append(a)},setCols:function(){var keys=_.map(this.options.headers,function(a){return a.split(":")[0]}),rows=[],that=this;_.each(this.options.collection.models,function(model){var cols=[],attrs=null,field=null;_.each(keys,function(key){field=key.split("."),field.length>1?(attrs=[],_.each(field,function(a){attrs.push('"'+a+'"')}),field=attrs.join("][")):field='"'+key+'"';try{field=eval("model.attributes["+field+"]"),field=that.options.sanitize===!1?field:null===field||void 0===field?"":field,key=key.replace(/\./g,"-"),cols.push('<td class="col-'+key+'">'+field+"</td>")}catch(err){cols.push("<td></td>")}}),rows.push('<tr id="'+model.id+'">'+cols.join("")+"</tr>")}),this.$("table > tbody").append(rows.join(""))},setCssClasses:function(){this.$("table").addClass(this.options.cssClasses.join(" "))}})},{}]},{},[1])(1)});